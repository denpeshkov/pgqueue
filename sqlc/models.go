// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type JobState string

const (
	JobStateAvailable JobState = "available"
	JobStateRunning   JobState = "running"
	JobStateCompleted JobState = "completed"
)

func (e *JobState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = JobState(s)
	case string:
		*e = JobState(s)
	default:
		return fmt.Errorf("unsupported scan type for JobState: %T", src)
	}
	return nil
}

type NullJobState struct {
	JobState JobState
	Valid    bool // Valid is true if JobState is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullJobState) Scan(value interface{}) error {
	if value == nil {
		ns.JobState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.JobState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullJobState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.JobState), nil
}

type Job struct {
	ID          int64
	State       JobState
	Description pgtype.Text
}
